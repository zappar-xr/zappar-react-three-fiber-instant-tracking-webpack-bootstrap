{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","useState","placementMode","setPlacementMode","placementCameraOffset","color","position","intensity","id","onClick","currentPlacementMode","onKeyDown","role","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAsCeA,MAlCf,WACI,MAAwCC,oBAAS,GAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACA,OACE,qCACE,eAAC,eAAD,WACE,cAAC,eAAD,IACA,cAAC,iBAAD,CAAgBD,cAAeA,EAAeE,sBAAuB,CAAC,EAAG,GAAI,GAA7E,SACE,iCACE,yCACA,sCAAsBC,MAAM,iBAGhC,kCAAkBC,SAAU,CAAC,IAAK,EAAG,GAAIC,UAAW,SAGtD,sBACEC,GAAG,sBACHC,QAAS,WACPN,GAAiB,SAACO,GAAD,OAA2BA,MAE9CC,UAAW,WACTR,GAAiB,SAACO,GAAD,OAA2BA,MAE9CE,KAAK,SACLC,SAAU,EATZ,wBAYGX,EAAgB,UAAY,YAZ/B,oBCLOY,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,yCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.211bd7ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ZapparCamera, InstantTracker, ZapparCanvas } from '@zappar/zappar-react-three-fiber';\n\n\nfunction App() {\n    let [placementMode, setPlacementMode] = useState(true);\n    return (\n      <>\n        <ZapparCanvas>\n          <ZapparCamera />\n          <InstantTracker placementMode={placementMode} placementCameraOffset={[0, 0, -5]}>\n            <mesh>\n              <sphereBufferGeometry />\n              <meshStandardMaterial color=\"hotpink\" />\n            </mesh>\n          </InstantTracker>\n          <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\n\n        </ZapparCanvas>\n        <div\n          id=\"zappar-placement-ui\"\n          onClick={() => {\n            setPlacementMode((currentPlacementMode) => !currentPlacementMode);\n          }}\n          onKeyDown={() => {\n            setPlacementMode((currentPlacementMode) => !currentPlacementMode);\n          }}\n          role=\"button\"\n          tabIndex={0}\n        >\n          Tap here to\n          {placementMode ? ' place ' : ' pick up '}\n          the object\n        </div>\n      </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}